substitutions:
  name: esphome-web-7c5db0
  friendly_name: ESPHome Web 7c5db0

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO34
      inverted: False
    name: "sensore pioggia"
    id: sensore_pioggia
    on_state:
      - if:
          condition:
            binary_sensor.is_on: sensore_pioggia
          then:
            - logger.log: "Sensor hujan terdeteksi - menutup tirai"
            - stepper.set_target:
                id: my_stepper
                target: 18500
          else:
            - logger.log: "Tidak ada hujan - membuka tirai"
            - stepper.set_target:
                id: my_stepper
                target: 0

stepper:
  - platform: uln2003
    id: my_stepper
    pin_a: GPIO23
    pin_b: GPIO22
    pin_c: GPIO21
    pin_d: GPIO19
    max_speed: 500 steps/s
    sleep_when_done: true

cover:
  - platform: template
    name: "Blinds"
    id: blinds
    open_action:
      - logger.log: "Membuka tirai"
      - stepper.set_target:
          id: my_stepper
          target: 0
    close_action:
      - logger.log: "Menutup tirai"
      - stepper.set_target:
          id: my_stepper
          target: 18500
    position_action:
      - stepper.set_target:
          id: my_stepper
          target: !lambda "return (id(my_stepper).current_position / 18500) * 100;"
